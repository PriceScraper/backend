name: Deploy
on:
  push:
    branches:
      - main
  workflow_dispatch:
jobs:
  build:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'
      - name: Deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ vars.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          GITHUBCLIENTSECRET: ${{ secrets.GITHUBCLIENTSECRET }}
          GITHUBCLIENTID: ${{ vars.GITHUBCLIENTID }}
        run: |
          mvn clean install -DskipTests -DskipITs
          export AWS_DEFAULT_REGION=eu-west-3
          docker swarm init
          echo "${AWS_ACCESS_KEY_ID}" > ./AWS_ACCESS_KEY_ID
          echo "${AWS_SECRET_ACCESS_KEY}" > ./AWS_SECRET_ACCESS_KEY
          echo "${GITHUBCLIENTSECRET}" > ./GITHUBCLIENTSECRET
          echo "${GITHUBCLIENTID}" > ./GITHUBCLIENTID
          docker secret create AWS_ACCESS_KEY_ID ./AWS_ACCESS_KEY_ID
          docker secret create AWS_SECRET_ACCESS_KEY ./AWS_SECRET_ACCESS_KEY
          docker secret create GITHUBCLIENTSECRET ./GITHUBCLIENTSECRET
          docker secret create GITHUBCLIENTID ./GITHUBCLIENTID
          export DOCKER_BUILDKIT=1
          docker build --secret id=AWS_ACCESS_KEY_ID --secret id=AWS_SECRET_ACCESS_KEY --secret id=GITHUBCLIENTSECRET --secret id=GITHUBCLIENTID  -t pricescraper .
          PATH=$PATH:./
          curl "https://s3.us-west-2.amazonaws.com/lightsailctl/latest/linux-amd64/lightsailctl" -o "./lightsailctl"
          sudo chmod +x ./lightsailctl
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip -qq awscliv2.zip
          sudo ./aws/install --update
          mkdir ~/.aws
          echo -e "[default]\naws_access_key_id = ${AWS_ACCESS_KEY_ID}\naws_secret_access_key = ${AWS_SECRET_ACCESS_KEY}" > ~/.aws/credentials
          aws lightsail push-container-image --region eu-west-3 --service-name backend --label pricescraperbackend --image pricescraper
          aws lightsail get-container-images --service-name backend > pushed_image.txt
          cat pushed_image.txt | jq --raw-output ".containerImages[0].image" > image.txt
          jq --arg image $(cat image.txt) '.containers.pricescraperbackend.image = $image' container.template.json > container.json
          aws lightsail create-container-service-deployment --service-name backend --cli-input-json file://$(pwd)/container.json
